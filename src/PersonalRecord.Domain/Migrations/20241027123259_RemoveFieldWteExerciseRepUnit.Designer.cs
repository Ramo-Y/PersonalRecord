// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PersonalRecord.Domain.Models.Entities;

#nullable disable

namespace PersonalRecord.Domain.Migrations
{
    [DbContext(typeof(PersonalRecordContext))]
    [Migration("20241027123259_RemoveFieldWteExerciseRepUnit")]
    partial class RemoveFieldWteExerciseRepUnit
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.10");

            modelBuilder.Entity("PersonalRecord.Domain.Models.Entities.Exercise", b =>
                {
                    b.Property<Guid>("ExerciseID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("ExrName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ExerciseID");

                    b.ToTable("ExerciseItems");
                });

            modelBuilder.Entity("PersonalRecord.Domain.Models.Entities.Movement", b =>
                {
                    b.Property<Guid>("MovementID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("MovName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("MovementID");

                    b.ToTable("MovementItems");
                });

            modelBuilder.Entity("PersonalRecord.Domain.Models.Entities.MovementRecord", b =>
                {
                    b.Property<Guid>("MovementRecordID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("MvrDate")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("MvrMovementID_FK")
                        .HasColumnType("TEXT");

                    b.Property<int>("MvrReps")
                        .HasColumnType("INTEGER");

                    b.Property<float>("MvrWeight")
                        .HasColumnType("REAL");

                    b.HasKey("MovementRecordID");

                    b.HasIndex("MvrMovementID_FK");

                    b.ToTable("MovementRecordItems");
                });

            modelBuilder.Entity("PersonalRecord.Domain.Models.Entities.Workout", b =>
                {
                    b.Property<Guid>("WorkoutID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("WokName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("WokNotes")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("WorkoutID");

                    b.ToTable("WorkoutItems");
                });

            modelBuilder.Entity("PersonalRecord.Domain.Models.Entities.WorkoutRecord", b =>
                {
                    b.Property<Guid>("WorkoutRecordID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<bool>("WreCompletedRx")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("WreDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("WreNotes")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<float>("WreScaledWeight")
                        .HasColumnType("REAL");

                    b.Property<TimeOnly>("WreTime")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("WreWorkoutID_FK")
                        .HasColumnType("TEXT");

                    b.HasKey("WorkoutRecordID");

                    b.HasIndex("WreWorkoutID_FK");

                    b.ToTable("WorkoutRecordItems");
                });

            modelBuilder.Entity("PersonalRecord.Domain.Models.Entities.WorkoutToExercise", b =>
                {
                    b.Property<Guid>("WorkoutToExerciseID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("WteExerciseID_FK")
                        .HasColumnType("TEXT");

                    b.Property<float>("WteExerciseRepCount")
                        .HasColumnType("REAL");

                    b.Property<Guid>("WteWorkoutID_FK")
                        .HasColumnType("TEXT");

                    b.HasKey("WorkoutToExerciseID");

                    b.HasIndex("WteExerciseID_FK");

                    b.HasIndex("WteWorkoutID_FK");

                    b.ToTable("WorkoutToExerciseItems");
                });

            modelBuilder.Entity("PersonalRecord.Domain.Models.Entities.MovementRecord", b =>
                {
                    b.HasOne("PersonalRecord.Domain.Models.Entities.Movement", "Movement")
                        .WithMany()
                        .HasForeignKey("MvrMovementID_FK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Movement");
                });

            modelBuilder.Entity("PersonalRecord.Domain.Models.Entities.WorkoutRecord", b =>
                {
                    b.HasOne("PersonalRecord.Domain.Models.Entities.Workout", "Workout")
                        .WithMany()
                        .HasForeignKey("WreWorkoutID_FK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Workout");
                });

            modelBuilder.Entity("PersonalRecord.Domain.Models.Entities.WorkoutToExercise", b =>
                {
                    b.HasOne("PersonalRecord.Domain.Models.Entities.Exercise", "Exercise")
                        .WithMany()
                        .HasForeignKey("WteExerciseID_FK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PersonalRecord.Domain.Models.Entities.Workout", "Workout")
                        .WithMany()
                        .HasForeignKey("WteWorkoutID_FK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Exercise");

                    b.Navigation("Workout");
                });
#pragma warning restore 612, 618
        }
    }
}
